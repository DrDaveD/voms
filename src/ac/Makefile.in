# Makefile.in generated by automake 1.9.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SOURCES = $(libattcert_la_SOURCES) $(libattcert_gcc32_la_SOURCES) $(libattcert_gcc32dbg_la_SOURCES) $(libattcert_gcc32dbgpthr_la_SOURCES) $(libattcert_gcc32pthr_la_SOURCES) $(libattcert_gcc64_la_SOURCES) $(libattcert_gcc64dbg_la_SOURCES) $(libattcert_gcc64dbgpthr_la_SOURCES) $(libattcert_gcc64pthr_la_SOURCES) $(libccattcert_la_SOURCES) $(libccattcert_gcc32_la_SOURCES) $(libccattcert_gcc32dbg_la_SOURCES) $(libccattcert_gcc32dbgpthr_la_SOURCES) $(libccattcert_gcc32pthr_la_SOURCES) $(libccattcert_gcc64_la_SOURCES) $(libccattcert_gcc64dbg_la_SOURCES) $(libccattcert_gcc64dbgpthr_la_SOURCES) $(libccattcert_gcc64pthr_la_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/ac
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/project/acinclude.m4 \
	$(top_srcdir)/project/cppunit.m4 \
	$(top_srcdir)/project/expat.m4 $(top_srcdir)/project/glite.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/./project/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/autogen/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libattcert_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_la_OBJECTS = libattcert_la-validate.lo \
	libattcert_la-write.lo libattcert_la-extensions.lo \
	libattcert_la-mystack.lo libattcert_la-error.lo \
	libattcert_la-newformat.lo libattcert_la-init.lo
libattcert_la_OBJECTS = $(am_libattcert_la_OBJECTS)
libattcert_gcc32_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_gcc32_la_OBJECTS = libattcert_gcc32_la-validate.lo \
	libattcert_gcc32_la-write.lo libattcert_gcc32_la-extensions.lo \
	libattcert_gcc32_la-mystack.lo libattcert_gcc32_la-error.lo \
	libattcert_gcc32_la-newformat.lo libattcert_gcc32_la-init.lo
libattcert_gcc32_la_OBJECTS = $(am_libattcert_gcc32_la_OBJECTS)
libattcert_gcc32dbg_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_gcc32dbg_la_OBJECTS =  \
	libattcert_gcc32dbg_la-validate.lo \
	libattcert_gcc32dbg_la-write.lo \
	libattcert_gcc32dbg_la-extensions.lo \
	libattcert_gcc32dbg_la-mystack.lo \
	libattcert_gcc32dbg_la-error.lo \
	libattcert_gcc32dbg_la-newformat.lo \
	libattcert_gcc32dbg_la-init.lo
libattcert_gcc32dbg_la_OBJECTS = $(am_libattcert_gcc32dbg_la_OBJECTS)
libattcert_gcc32dbgpthr_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_gcc32dbgpthr_la_OBJECTS =  \
	libattcert_gcc32dbgpthr_la-validate.lo \
	libattcert_gcc32dbgpthr_la-write.lo \
	libattcert_gcc32dbgpthr_la-extensions.lo \
	libattcert_gcc32dbgpthr_la-mystack.lo \
	libattcert_gcc32dbgpthr_la-error.lo \
	libattcert_gcc32dbgpthr_la-newformat.lo \
	libattcert_gcc32dbgpthr_la-init.lo
libattcert_gcc32dbgpthr_la_OBJECTS =  \
	$(am_libattcert_gcc32dbgpthr_la_OBJECTS)
libattcert_gcc32pthr_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_gcc32pthr_la_OBJECTS =  \
	libattcert_gcc32pthr_la-validate.lo \
	libattcert_gcc32pthr_la-write.lo \
	libattcert_gcc32pthr_la-extensions.lo \
	libattcert_gcc32pthr_la-mystack.lo \
	libattcert_gcc32pthr_la-error.lo \
	libattcert_gcc32pthr_la-newformat.lo \
	libattcert_gcc32pthr_la-init.lo
libattcert_gcc32pthr_la_OBJECTS =  \
	$(am_libattcert_gcc32pthr_la_OBJECTS)
libattcert_gcc64_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_gcc64_la_OBJECTS = libattcert_gcc64_la-validate.lo \
	libattcert_gcc64_la-write.lo libattcert_gcc64_la-extensions.lo \
	libattcert_gcc64_la-mystack.lo libattcert_gcc64_la-error.lo \
	libattcert_gcc64_la-newformat.lo libattcert_gcc64_la-init.lo
libattcert_gcc64_la_OBJECTS = $(am_libattcert_gcc64_la_OBJECTS)
libattcert_gcc64dbg_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_gcc64dbg_la_OBJECTS =  \
	libattcert_gcc64dbg_la-validate.lo \
	libattcert_gcc64dbg_la-write.lo \
	libattcert_gcc64dbg_la-extensions.lo \
	libattcert_gcc64dbg_la-mystack.lo \
	libattcert_gcc64dbg_la-error.lo \
	libattcert_gcc64dbg_la-newformat.lo \
	libattcert_gcc64dbg_la-init.lo
libattcert_gcc64dbg_la_OBJECTS = $(am_libattcert_gcc64dbg_la_OBJECTS)
libattcert_gcc64dbgpthr_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_gcc64dbgpthr_la_OBJECTS =  \
	libattcert_gcc64dbgpthr_la-validate.lo \
	libattcert_gcc64dbgpthr_la-write.lo \
	libattcert_gcc64dbgpthr_la-extensions.lo \
	libattcert_gcc64dbgpthr_la-mystack.lo \
	libattcert_gcc64dbgpthr_la-error.lo \
	libattcert_gcc64dbgpthr_la-newformat.lo \
	libattcert_gcc64dbgpthr_la-init.lo
libattcert_gcc64dbgpthr_la_OBJECTS =  \
	$(am_libattcert_gcc64dbgpthr_la_OBJECTS)
libattcert_gcc64pthr_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libattcert_gcc64pthr_la_OBJECTS =  \
	libattcert_gcc64pthr_la-validate.lo \
	libattcert_gcc64pthr_la-write.lo \
	libattcert_gcc64pthr_la-extensions.lo \
	libattcert_gcc64pthr_la-mystack.lo \
	libattcert_gcc64pthr_la-error.lo \
	libattcert_gcc64pthr_la-newformat.lo \
	libattcert_gcc64pthr_la-init.lo
libattcert_gcc64pthr_la_OBJECTS =  \
	$(am_libattcert_gcc64pthr_la_OBJECTS)
libccattcert_la_DEPENDENCIES = libattcert.la $(am__DEPENDENCIES_1)
am_libccattcert_la_OBJECTS = create.lo ccinit.lo
libccattcert_la_OBJECTS = $(am_libccattcert_la_OBJECTS)
libccattcert_gcc32_la_DEPENDENCIES = libattcert_gcc32.la \
	$(am__DEPENDENCIES_1)
am_libccattcert_gcc32_la_OBJECTS = create.lo ccinit.lo
libccattcert_gcc32_la_OBJECTS = $(am_libccattcert_gcc32_la_OBJECTS)
libccattcert_gcc32dbg_la_DEPENDENCIES = libattcert_gcc32dbg.la \
	$(am__DEPENDENCIES_1)
am_libccattcert_gcc32dbg_la_OBJECTS = create.lo ccinit.lo
libccattcert_gcc32dbg_la_OBJECTS =  \
	$(am_libccattcert_gcc32dbg_la_OBJECTS)
libccattcert_gcc32dbgpthr_la_DEPENDENCIES =  \
	libattcert_gcc32dbgpthr.la $(am__DEPENDENCIES_1)
am_libccattcert_gcc32dbgpthr_la_OBJECTS = create.lo ccinit.lo
libccattcert_gcc32dbgpthr_la_OBJECTS =  \
	$(am_libccattcert_gcc32dbgpthr_la_OBJECTS)
libccattcert_gcc32pthr_la_DEPENDENCIES = libattcert_gcc32pthr.la \
	$(am__DEPENDENCIES_1)
am_libccattcert_gcc32pthr_la_OBJECTS = create.lo ccinit.lo
libccattcert_gcc32pthr_la_OBJECTS =  \
	$(am_libccattcert_gcc32pthr_la_OBJECTS)
libccattcert_gcc64_la_DEPENDENCIES = libattcert_gcc64.la \
	$(am__DEPENDENCIES_1)
am_libccattcert_gcc64_la_OBJECTS = create.lo ccinit.lo
libccattcert_gcc64_la_OBJECTS = $(am_libccattcert_gcc64_la_OBJECTS)
libccattcert_gcc64dbg_la_DEPENDENCIES = libattcert_gcc64dbg.la \
	$(am__DEPENDENCIES_1)
am_libccattcert_gcc64dbg_la_OBJECTS = create.lo ccinit.lo
libccattcert_gcc64dbg_la_OBJECTS =  \
	$(am_libccattcert_gcc64dbg_la_OBJECTS)
libccattcert_gcc64dbgpthr_la_DEPENDENCIES =  \
	libattcert_gcc64dbgpthr.la $(am__DEPENDENCIES_1)
am_libccattcert_gcc64dbgpthr_la_OBJECTS = create.lo ccinit.lo
libccattcert_gcc64dbgpthr_la_OBJECTS =  \
	$(am_libccattcert_gcc64dbgpthr_la_OBJECTS)
libccattcert_gcc64pthr_la_DEPENDENCIES = libattcert_gcc64pthr.la \
	$(am__DEPENDENCIES_1)
am_libccattcert_gcc64pthr_la_OBJECTS = create.lo ccinit.lo
libccattcert_gcc64pthr_la_OBJECTS =  \
	$(am_libccattcert_gcc64pthr_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src/autogen
depcomp = $(SHELL) $(top_srcdir)/./project/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libattcert_la_SOURCES) $(libattcert_gcc32_la_SOURCES) \
	$(libattcert_gcc32dbg_la_SOURCES) \
	$(libattcert_gcc32dbgpthr_la_SOURCES) \
	$(libattcert_gcc32pthr_la_SOURCES) \
	$(libattcert_gcc64_la_SOURCES) \
	$(libattcert_gcc64dbg_la_SOURCES) \
	$(libattcert_gcc64dbgpthr_la_SOURCES) \
	$(libattcert_gcc64pthr_la_SOURCES) $(libccattcert_la_SOURCES) \
	$(libccattcert_gcc32_la_SOURCES) \
	$(libccattcert_gcc32dbg_la_SOURCES) \
	$(libccattcert_gcc32dbgpthr_la_SOURCES) \
	$(libccattcert_gcc32pthr_la_SOURCES) \
	$(libccattcert_gcc64_la_SOURCES) \
	$(libccattcert_gcc64dbg_la_SOURCES) \
	$(libccattcert_gcc64dbgpthr_la_SOURCES) \
	$(libccattcert_gcc64pthr_la_SOURCES)
DIST_SOURCES = $(libattcert_la_SOURCES) $(libattcert_gcc32_la_SOURCES) \
	$(libattcert_gcc32dbg_la_SOURCES) \
	$(libattcert_gcc32dbgpthr_la_SOURCES) \
	$(libattcert_gcc32pthr_la_SOURCES) \
	$(libattcert_gcc64_la_SOURCES) \
	$(libattcert_gcc64dbg_la_SOURCES) \
	$(libattcert_gcc64dbgpthr_la_SOURCES) \
	$(libattcert_gcc64pthr_la_SOURCES) $(libccattcert_la_SOURCES) \
	$(libccattcert_gcc32_la_SOURCES) \
	$(libccattcert_gcc32dbg_la_SOURCES) \
	$(libccattcert_gcc32dbgpthr_la_SOURCES) \
	$(libccattcert_gcc32pthr_la_SOURCES) \
	$(libccattcert_gcc64_la_SOURCES) \
	$(libccattcert_gcc64dbg_la_SOURCES) \
	$(libccattcert_gcc64dbgpthr_la_SOURCES) \
	$(libccattcert_gcc64pthr_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_DOCS_FALSE = @BUILD_DOCS_FALSE@
BUILD_DOCS_TRUE = @BUILD_DOCS_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTTAR = @DISTTAR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_GLITE_FALSE = @ENABLE_GLITE_FALSE@
ENABLE_GLITE_TRUE = @ENABLE_GLITE_TRUE@
EXEEXT = @EXEEXT@
EXPAT_CFLAGS = @EXPAT_CFLAGS@
EXPAT_INSTALL_PATH = @EXPAT_INSTALL_PATH@
EXPAT_LIBS = @EXPAT_LIBS@
EXPAT_STATIC_LIBS = @EXPAT_STATIC_LIBS@
F77 = @F77@
FFLAGS = @FFLAGS@
GLITE_CFLAGS = @GLITE_CFLAGS@
GLITE_LOCATION = @GLITE_LOCATION@
GLOBUS_CFLAGS = @GLOBUS_CFLAGS@
GLOBUS_GCC32DBGPTHR_CFLAGS = @GLOBUS_GCC32DBGPTHR_CFLAGS@
GLOBUS_GCC32DBGPTHR_GSS_LIBS = @GLOBUS_GCC32DBGPTHR_GSS_LIBS@
GLOBUS_GCC32DBG_CFLAGS = @GLOBUS_GCC32DBG_CFLAGS@
GLOBUS_GCC32DBG_GSS_LIBS = @GLOBUS_GCC32DBG_GSS_LIBS@
GLOBUS_GCC32PTHR_CFLAGS = @GLOBUS_GCC32PTHR_CFLAGS@
GLOBUS_GCC32PTHR_GSS_LIBS = @GLOBUS_GCC32PTHR_GSS_LIBS@
GLOBUS_GCC32_CFLAGS = @GLOBUS_GCC32_CFLAGS@
GLOBUS_GCC32_GSS_LIBS = @GLOBUS_GCC32_GSS_LIBS@
GLOBUS_GCC64DBGPTHR_CFLAGS = @GLOBUS_GCC64DBGPTHR_CFLAGS@
GLOBUS_GCC64DBGPTHR_GSS_LIBS = @GLOBUS_GCC64DBGPTHR_GSS_LIBS@
GLOBUS_GCC64DBG_CFLAGS = @GLOBUS_GCC64DBG_CFLAGS@
GLOBUS_GCC64DBG_GSS_LIBS = @GLOBUS_GCC64DBG_GSS_LIBS@
GLOBUS_GCC64PTHR_CFLAGS = @GLOBUS_GCC64PTHR_CFLAGS@
GLOBUS_GCC64PTHR_GSS_LIBS = @GLOBUS_GCC64PTHR_GSS_LIBS@
GLOBUS_GCC64_CFLAGS = @GLOBUS_GCC64_CFLAGS@
GLOBUS_GCC64_GSS_LIBS = @GLOBUS_GCC64_GSS_LIBS@
GLOBUS_GSS_LIBS = @GLOBUS_GSS_LIBS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LOCATION_DIR = @LOCATION_DIR@
LOCATION_ENV = @LOCATION_ENV@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VAR_LOCATION_ENV = @VAR_LOCATION_ENV@
VERSION = @VERSION@
WANTED_API_LIBS = @WANTED_API_LIBS@
WANTED_ATTCERT_LIBS = @WANTED_ATTCERT_LIBS@
WANTED_OLDGAA_LIBS = @WANTED_OLDGAA_LIBS@
WANTED_SOCK_LIBS = @WANTED_SOCK_LIBS@
WANTED_SSL_UTILS_LIBS = @WANTED_SSL_UTILS_LIBS@
WANT_UNIT_TEST_FALSE = @WANT_UNIT_TEST_FALSE@
WANT_UNIT_TEST_TRUE = @WANT_UNIT_TEST_TRUE@
WORKDIR = @WORKDIR@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
noinst_LTLIBRARIES = \
	libattcert.la \
	libccattcert.la \
	$(WANTED_ATTCERT_LIBS) # may add the libraries defined in EXTRA_LTLIBRARIES

libattcert_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_CFLAGS)

libattcert_la_LIBADD = \
	$(GLOBUS_GSS_LIBS)

libccattcert_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_la_LIBADD = \
	libattcert.la \
	$(GLOBUS_GSS_LIBS)

AM_CPPFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_srcdir)/src/sslutils


###
EXTRA_LTLIBRARIES = \
	libattcert_gcc32.la \
	libattcert_gcc32dbg.la \
	libattcert_gcc32pthr.la \
	libattcert_gcc32dbgpthr.la \
	libattcert_gcc64.la \
	libattcert_gcc64dbg.la \
	libattcert_gcc64pthr.la \
	libattcert_gcc64dbgpthr.la \
	libccattcert_gcc32.la \
	libccattcert_gcc32dbg.la \
	libccattcert_gcc32pthr.la \
	libccattcert_gcc32dbgpthr.la \
	libccattcert_gcc64.la \
	libccattcert_gcc64dbg.la \
	libccattcert_gcc64pthr.la \
	libccattcert_gcc64dbgpthr.la

libattcert_gcc32_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_gcc32_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_GCC32_CFLAGS)

libattcert_gcc32_la_LIBADD = \
	$(GLOBUS_GCC32_GSS_LIBS)

libccattcert_gcc32_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_gcc32_la_LIBADD = \
	libattcert_gcc32.la \
	$(GLOBUS_GCC32_GSS_LIBS)

libattcert_gcc32dbg_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_gcc32dbg_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_GCC32DBG_CFLAGS)

libattcert_gcc32dbg_la_LIBADD = \
	$(GLOBUS_GCC32DBG_GSS_LIBS)

libccattcert_gcc32dbg_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_gcc32dbg_la_LIBADD = \
	libattcert_gcc32dbg.la \
	$(GLOBUS_GCC32DBG_GSS_LIBS)

libattcert_gcc32pthr_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_gcc32pthr_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_GCC32PTHR_CFLAGS)

libattcert_gcc32pthr_la_LIBADD = \
	$(GLOBUS_GCC32PTHR_GSS_LIBS)

libccattcert_gcc32pthr_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_gcc32pthr_la_LIBADD = \
	libattcert_gcc32pthr.la \
	$(GLOBUS_GCC32PTHR_GSS_LIBS)

libattcert_gcc32dbgpthr_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_gcc32dbgpthr_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_GCC32DBGPTHR_CFLAGS)

libattcert_gcc32dbgpthr_la_LIBADD = \
	$(GLOBUS_GCC32DBGPTHR_GSS_LIBS)

libccattcert_gcc32dbgpthr_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_gcc32dbgpthr_la_LIBADD = \
	libattcert_gcc32dbgpthr.la \
	$(GLOBUS_GCC32DBGPTHR_GSS_LIBS)

libattcert_gcc64_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_gcc64_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_GCC64_CFLAGS)

libattcert_gcc64_la_LIBADD = \
	$(GLOBUS_GCC64_GSS_LIBS)

libccattcert_gcc64_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_gcc64_la_LIBADD = \
	libattcert_gcc64.la \
	$(GLOBUS_GCC64_GSS_LIBS)

libattcert_gcc64dbg_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_gcc64dbg_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_GCC64DBG_CFLAGS)

libattcert_gcc64dbg_la_LIBADD = \
	$(GLOBUS_GCC64DBG_GSS_LIBS)

libccattcert_gcc64dbg_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_gcc64dbg_la_LIBADD = \
	libattcert_gcc64dbg.la \
	$(GLOBUS_GCC64DBG_GSS_LIBS)

libattcert_gcc64pthr_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_gcc64pthr_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_GCC64PTHR_CFLAGS)

libattcert_gcc64pthr_la_LIBADD = \
	$(GLOBUS_GCC64PTHR_GSS_LIBS)

libccattcert_gcc64pthr_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_gcc64pthr_la_LIBADD = \
	libattcert_gcc64pthr.la \
	$(GLOBUS_GCC64PTHR_GSS_LIBS)

libattcert_gcc64dbgpthr_la_SOURCES = \
	validate.c \
	write.c \
	extensions.c \
	mystack.c \
	error.c \
	newformat.c \
	init.c

libattcert_gcc64dbgpthr_la_CFLAGS = \
	-I $(top_srcdir)/src/include \
	-I $(top_builddir)/src/sslutils \
	$(GLOBUS_GCC64DBGPTHR_CFLAGS)

libattcert_gcc64dbgpthr_la_LIBADD = \
	$(GLOBUS_GCC64DBGPTHR_GSS_LIBS)

libccattcert_gcc64dbgpthr_la_SOURCES = \
	create.cc \
	ccinit.cc

libccattcert_gcc64dbgpthr_la_LIBADD = \
	libattcert_gcc64dbgpthr.la \
	$(GLOBUS_GCC64DBGPTHR_GSS_LIBS)

EXTRA_DIST = \
	acerrors.h \
	write.h \
	init.h \
	extensions.h \
	test.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/ac/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/ac/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libattcert.la: $(libattcert_la_OBJECTS) $(libattcert_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_la_LDFLAGS) $(libattcert_la_OBJECTS) $(libattcert_la_LIBADD) $(LIBS)
libattcert_gcc32.la: $(libattcert_gcc32_la_OBJECTS) $(libattcert_gcc32_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_gcc32_la_LDFLAGS) $(libattcert_gcc32_la_OBJECTS) $(libattcert_gcc32_la_LIBADD) $(LIBS)
libattcert_gcc32dbg.la: $(libattcert_gcc32dbg_la_OBJECTS) $(libattcert_gcc32dbg_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_gcc32dbg_la_LDFLAGS) $(libattcert_gcc32dbg_la_OBJECTS) $(libattcert_gcc32dbg_la_LIBADD) $(LIBS)
libattcert_gcc32dbgpthr.la: $(libattcert_gcc32dbgpthr_la_OBJECTS) $(libattcert_gcc32dbgpthr_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_gcc32dbgpthr_la_LDFLAGS) $(libattcert_gcc32dbgpthr_la_OBJECTS) $(libattcert_gcc32dbgpthr_la_LIBADD) $(LIBS)
libattcert_gcc32pthr.la: $(libattcert_gcc32pthr_la_OBJECTS) $(libattcert_gcc32pthr_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_gcc32pthr_la_LDFLAGS) $(libattcert_gcc32pthr_la_OBJECTS) $(libattcert_gcc32pthr_la_LIBADD) $(LIBS)
libattcert_gcc64.la: $(libattcert_gcc64_la_OBJECTS) $(libattcert_gcc64_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_gcc64_la_LDFLAGS) $(libattcert_gcc64_la_OBJECTS) $(libattcert_gcc64_la_LIBADD) $(LIBS)
libattcert_gcc64dbg.la: $(libattcert_gcc64dbg_la_OBJECTS) $(libattcert_gcc64dbg_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_gcc64dbg_la_LDFLAGS) $(libattcert_gcc64dbg_la_OBJECTS) $(libattcert_gcc64dbg_la_LIBADD) $(LIBS)
libattcert_gcc64dbgpthr.la: $(libattcert_gcc64dbgpthr_la_OBJECTS) $(libattcert_gcc64dbgpthr_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_gcc64dbgpthr_la_LDFLAGS) $(libattcert_gcc64dbgpthr_la_OBJECTS) $(libattcert_gcc64dbgpthr_la_LIBADD) $(LIBS)
libattcert_gcc64pthr.la: $(libattcert_gcc64pthr_la_OBJECTS) $(libattcert_gcc64pthr_la_DEPENDENCIES) 
	$(LINK)  $(libattcert_gcc64pthr_la_LDFLAGS) $(libattcert_gcc64pthr_la_OBJECTS) $(libattcert_gcc64pthr_la_LIBADD) $(LIBS)
libccattcert.la: $(libccattcert_la_OBJECTS) $(libccattcert_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_la_LDFLAGS) $(libccattcert_la_OBJECTS) $(libccattcert_la_LIBADD) $(LIBS)
libccattcert_gcc32.la: $(libccattcert_gcc32_la_OBJECTS) $(libccattcert_gcc32_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_gcc32_la_LDFLAGS) $(libccattcert_gcc32_la_OBJECTS) $(libccattcert_gcc32_la_LIBADD) $(LIBS)
libccattcert_gcc32dbg.la: $(libccattcert_gcc32dbg_la_OBJECTS) $(libccattcert_gcc32dbg_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_gcc32dbg_la_LDFLAGS) $(libccattcert_gcc32dbg_la_OBJECTS) $(libccattcert_gcc32dbg_la_LIBADD) $(LIBS)
libccattcert_gcc32dbgpthr.la: $(libccattcert_gcc32dbgpthr_la_OBJECTS) $(libccattcert_gcc32dbgpthr_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_gcc32dbgpthr_la_LDFLAGS) $(libccattcert_gcc32dbgpthr_la_OBJECTS) $(libccattcert_gcc32dbgpthr_la_LIBADD) $(LIBS)
libccattcert_gcc32pthr.la: $(libccattcert_gcc32pthr_la_OBJECTS) $(libccattcert_gcc32pthr_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_gcc32pthr_la_LDFLAGS) $(libccattcert_gcc32pthr_la_OBJECTS) $(libccattcert_gcc32pthr_la_LIBADD) $(LIBS)
libccattcert_gcc64.la: $(libccattcert_gcc64_la_OBJECTS) $(libccattcert_gcc64_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_gcc64_la_LDFLAGS) $(libccattcert_gcc64_la_OBJECTS) $(libccattcert_gcc64_la_LIBADD) $(LIBS)
libccattcert_gcc64dbg.la: $(libccattcert_gcc64dbg_la_OBJECTS) $(libccattcert_gcc64dbg_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_gcc64dbg_la_LDFLAGS) $(libccattcert_gcc64dbg_la_OBJECTS) $(libccattcert_gcc64dbg_la_LIBADD) $(LIBS)
libccattcert_gcc64dbgpthr.la: $(libccattcert_gcc64dbgpthr_la_OBJECTS) $(libccattcert_gcc64dbgpthr_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_gcc64dbgpthr_la_LDFLAGS) $(libccattcert_gcc64dbgpthr_la_OBJECTS) $(libccattcert_gcc64dbgpthr_la_LIBADD) $(LIBS)
libccattcert_gcc64pthr.la: $(libccattcert_gcc64pthr_la_OBJECTS) $(libccattcert_gcc64pthr_la_DEPENDENCIES) 
	$(CXXLINK)  $(libccattcert_gcc64pthr_la_LDFLAGS) $(libccattcert_gcc64pthr_la_OBJECTS) $(libccattcert_gcc64pthr_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ccinit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32_la-write.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbg_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbg_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbg_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbg_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbg_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbg_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbg_la-write.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbgpthr_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbgpthr_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbgpthr_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbgpthr_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbgpthr_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbgpthr_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32dbgpthr_la-write.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32pthr_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32pthr_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32pthr_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32pthr_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32pthr_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32pthr_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc32pthr_la-write.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64_la-write.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbg_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbg_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbg_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbg_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbg_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbg_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbg_la-write.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbgpthr_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbgpthr_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbgpthr_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbgpthr_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbgpthr_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbgpthr_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64dbgpthr_la-write.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64pthr_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64pthr_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64pthr_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64pthr_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64pthr_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64pthr_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_gcc64pthr_la-write.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_la-extensions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_la-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_la-mystack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_la-newformat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_la-validate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libattcert_la-write.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libattcert_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -MT libattcert_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_la-validate.Tpo" -c -o libattcert_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_la-validate.Tpo" "$(DEPDIR)/libattcert_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -c -o libattcert_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -MT libattcert_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_la-write.Tpo" -c -o libattcert_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_la-write.Tpo" "$(DEPDIR)/libattcert_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -c -o libattcert_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -MT libattcert_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_la-extensions.Tpo" -c -o libattcert_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_la-extensions.Tpo" "$(DEPDIR)/libattcert_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -c -o libattcert_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -MT libattcert_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_la-mystack.Tpo" -c -o libattcert_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_la-mystack.Tpo" "$(DEPDIR)/libattcert_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -c -o libattcert_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -MT libattcert_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_la-error.Tpo" -c -o libattcert_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_la-error.Tpo" "$(DEPDIR)/libattcert_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -c -o libattcert_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -MT libattcert_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_la-newformat.Tpo" -c -o libattcert_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_la-newformat.Tpo" "$(DEPDIR)/libattcert_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -c -o libattcert_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -MT libattcert_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_la-init.Tpo" -c -o libattcert_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_la-init.Tpo" "$(DEPDIR)/libattcert_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_la_CFLAGS) $(CFLAGS) -c -o libattcert_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

libattcert_gcc32_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32_la-validate.Tpo" -c -o libattcert_gcc32_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32_la-validate.Tpo" "$(DEPDIR)/libattcert_gcc32_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_gcc32_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_gcc32_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32_la-write.Tpo" -c -o libattcert_gcc32_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32_la-write.Tpo" "$(DEPDIR)/libattcert_gcc32_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_gcc32_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_gcc32_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32_la-extensions.Tpo" -c -o libattcert_gcc32_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32_la-extensions.Tpo" "$(DEPDIR)/libattcert_gcc32_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_gcc32_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_gcc32_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32_la-mystack.Tpo" -c -o libattcert_gcc32_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32_la-mystack.Tpo" "$(DEPDIR)/libattcert_gcc32_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_gcc32_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_gcc32_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32_la-error.Tpo" -c -o libattcert_gcc32_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32_la-error.Tpo" "$(DEPDIR)/libattcert_gcc32_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_gcc32_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_gcc32_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32_la-newformat.Tpo" -c -o libattcert_gcc32_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32_la-newformat.Tpo" "$(DEPDIR)/libattcert_gcc32_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_gcc32_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_gcc32_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32_la-init.Tpo" -c -o libattcert_gcc32_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32_la-init.Tpo" "$(DEPDIR)/libattcert_gcc32_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_gcc32_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

libattcert_gcc32dbg_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbg_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbg_la-validate.Tpo" -c -o libattcert_gcc32dbg_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbg_la-validate.Tpo" "$(DEPDIR)/libattcert_gcc32dbg_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbg_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_gcc32dbg_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbg_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_gcc32dbg_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbg_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbg_la-write.Tpo" -c -o libattcert_gcc32dbg_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbg_la-write.Tpo" "$(DEPDIR)/libattcert_gcc32dbg_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbg_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_gcc32dbg_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbg_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_gcc32dbg_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbg_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbg_la-extensions.Tpo" -c -o libattcert_gcc32dbg_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbg_la-extensions.Tpo" "$(DEPDIR)/libattcert_gcc32dbg_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbg_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_gcc32dbg_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbg_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_gcc32dbg_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbg_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbg_la-mystack.Tpo" -c -o libattcert_gcc32dbg_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbg_la-mystack.Tpo" "$(DEPDIR)/libattcert_gcc32dbg_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbg_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_gcc32dbg_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbg_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_gcc32dbg_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbg_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbg_la-error.Tpo" -c -o libattcert_gcc32dbg_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbg_la-error.Tpo" "$(DEPDIR)/libattcert_gcc32dbg_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbg_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_gcc32dbg_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbg_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_gcc32dbg_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbg_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbg_la-newformat.Tpo" -c -o libattcert_gcc32dbg_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbg_la-newformat.Tpo" "$(DEPDIR)/libattcert_gcc32dbg_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbg_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_gcc32dbg_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbg_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_gcc32dbg_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbg_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbg_la-init.Tpo" -c -o libattcert_gcc32dbg_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbg_la-init.Tpo" "$(DEPDIR)/libattcert_gcc32dbg_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbg_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_gcc32dbg_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbg_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

libattcert_gcc32dbgpthr_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbgpthr_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbgpthr_la-validate.Tpo" -c -o libattcert_gcc32dbgpthr_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-validate.Tpo" "$(DEPDIR)/libattcert_gcc32dbgpthr_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_gcc32dbgpthr_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbgpthr_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_gcc32dbgpthr_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbgpthr_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbgpthr_la-write.Tpo" -c -o libattcert_gcc32dbgpthr_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-write.Tpo" "$(DEPDIR)/libattcert_gcc32dbgpthr_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_gcc32dbgpthr_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbgpthr_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_gcc32dbgpthr_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbgpthr_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbgpthr_la-extensions.Tpo" -c -o libattcert_gcc32dbgpthr_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-extensions.Tpo" "$(DEPDIR)/libattcert_gcc32dbgpthr_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_gcc32dbgpthr_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbgpthr_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_gcc32dbgpthr_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbgpthr_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbgpthr_la-mystack.Tpo" -c -o libattcert_gcc32dbgpthr_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-mystack.Tpo" "$(DEPDIR)/libattcert_gcc32dbgpthr_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_gcc32dbgpthr_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbgpthr_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_gcc32dbgpthr_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbgpthr_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbgpthr_la-error.Tpo" -c -o libattcert_gcc32dbgpthr_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-error.Tpo" "$(DEPDIR)/libattcert_gcc32dbgpthr_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_gcc32dbgpthr_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbgpthr_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_gcc32dbgpthr_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbgpthr_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbgpthr_la-newformat.Tpo" -c -o libattcert_gcc32dbgpthr_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-newformat.Tpo" "$(DEPDIR)/libattcert_gcc32dbgpthr_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_gcc32dbgpthr_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbgpthr_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_gcc32dbgpthr_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32dbgpthr_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32dbgpthr_la-init.Tpo" -c -o libattcert_gcc32dbgpthr_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-init.Tpo" "$(DEPDIR)/libattcert_gcc32dbgpthr_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32dbgpthr_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_gcc32dbgpthr_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32dbgpthr_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

libattcert_gcc32pthr_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32pthr_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32pthr_la-validate.Tpo" -c -o libattcert_gcc32pthr_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32pthr_la-validate.Tpo" "$(DEPDIR)/libattcert_gcc32pthr_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32pthr_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_gcc32pthr_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32pthr_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_gcc32pthr_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32pthr_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32pthr_la-write.Tpo" -c -o libattcert_gcc32pthr_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32pthr_la-write.Tpo" "$(DEPDIR)/libattcert_gcc32pthr_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32pthr_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_gcc32pthr_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32pthr_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_gcc32pthr_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32pthr_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32pthr_la-extensions.Tpo" -c -o libattcert_gcc32pthr_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32pthr_la-extensions.Tpo" "$(DEPDIR)/libattcert_gcc32pthr_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32pthr_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_gcc32pthr_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32pthr_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_gcc32pthr_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32pthr_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32pthr_la-mystack.Tpo" -c -o libattcert_gcc32pthr_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32pthr_la-mystack.Tpo" "$(DEPDIR)/libattcert_gcc32pthr_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32pthr_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_gcc32pthr_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32pthr_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_gcc32pthr_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32pthr_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32pthr_la-error.Tpo" -c -o libattcert_gcc32pthr_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32pthr_la-error.Tpo" "$(DEPDIR)/libattcert_gcc32pthr_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32pthr_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_gcc32pthr_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32pthr_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_gcc32pthr_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32pthr_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32pthr_la-newformat.Tpo" -c -o libattcert_gcc32pthr_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32pthr_la-newformat.Tpo" "$(DEPDIR)/libattcert_gcc32pthr_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32pthr_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_gcc32pthr_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32pthr_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_gcc32pthr_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc32pthr_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc32pthr_la-init.Tpo" -c -o libattcert_gcc32pthr_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc32pthr_la-init.Tpo" "$(DEPDIR)/libattcert_gcc32pthr_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc32pthr_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_gcc32pthr_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc32pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc32pthr_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

libattcert_gcc64_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64_la-validate.Tpo" -c -o libattcert_gcc64_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64_la-validate.Tpo" "$(DEPDIR)/libattcert_gcc64_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_gcc64_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_gcc64_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64_la-write.Tpo" -c -o libattcert_gcc64_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64_la-write.Tpo" "$(DEPDIR)/libattcert_gcc64_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_gcc64_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_gcc64_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64_la-extensions.Tpo" -c -o libattcert_gcc64_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64_la-extensions.Tpo" "$(DEPDIR)/libattcert_gcc64_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_gcc64_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_gcc64_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64_la-mystack.Tpo" -c -o libattcert_gcc64_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64_la-mystack.Tpo" "$(DEPDIR)/libattcert_gcc64_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_gcc64_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_gcc64_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64_la-error.Tpo" -c -o libattcert_gcc64_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64_la-error.Tpo" "$(DEPDIR)/libattcert_gcc64_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_gcc64_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_gcc64_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64_la-newformat.Tpo" -c -o libattcert_gcc64_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64_la-newformat.Tpo" "$(DEPDIR)/libattcert_gcc64_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_gcc64_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_gcc64_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64_la-init.Tpo" -c -o libattcert_gcc64_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64_la-init.Tpo" "$(DEPDIR)/libattcert_gcc64_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_gcc64_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

libattcert_gcc64dbg_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbg_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbg_la-validate.Tpo" -c -o libattcert_gcc64dbg_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbg_la-validate.Tpo" "$(DEPDIR)/libattcert_gcc64dbg_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbg_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_gcc64dbg_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbg_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_gcc64dbg_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbg_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbg_la-write.Tpo" -c -o libattcert_gcc64dbg_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbg_la-write.Tpo" "$(DEPDIR)/libattcert_gcc64dbg_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbg_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_gcc64dbg_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbg_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_gcc64dbg_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbg_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbg_la-extensions.Tpo" -c -o libattcert_gcc64dbg_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbg_la-extensions.Tpo" "$(DEPDIR)/libattcert_gcc64dbg_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbg_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_gcc64dbg_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbg_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_gcc64dbg_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbg_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbg_la-mystack.Tpo" -c -o libattcert_gcc64dbg_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbg_la-mystack.Tpo" "$(DEPDIR)/libattcert_gcc64dbg_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbg_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_gcc64dbg_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbg_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_gcc64dbg_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbg_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbg_la-error.Tpo" -c -o libattcert_gcc64dbg_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbg_la-error.Tpo" "$(DEPDIR)/libattcert_gcc64dbg_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbg_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_gcc64dbg_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbg_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_gcc64dbg_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbg_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbg_la-newformat.Tpo" -c -o libattcert_gcc64dbg_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbg_la-newformat.Tpo" "$(DEPDIR)/libattcert_gcc64dbg_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbg_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_gcc64dbg_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbg_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_gcc64dbg_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbg_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbg_la-init.Tpo" -c -o libattcert_gcc64dbg_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbg_la-init.Tpo" "$(DEPDIR)/libattcert_gcc64dbg_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbg_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_gcc64dbg_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbg_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbg_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

libattcert_gcc64dbgpthr_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbgpthr_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbgpthr_la-validate.Tpo" -c -o libattcert_gcc64dbgpthr_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-validate.Tpo" "$(DEPDIR)/libattcert_gcc64dbgpthr_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_gcc64dbgpthr_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbgpthr_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_gcc64dbgpthr_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbgpthr_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbgpthr_la-write.Tpo" -c -o libattcert_gcc64dbgpthr_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-write.Tpo" "$(DEPDIR)/libattcert_gcc64dbgpthr_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_gcc64dbgpthr_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbgpthr_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_gcc64dbgpthr_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbgpthr_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbgpthr_la-extensions.Tpo" -c -o libattcert_gcc64dbgpthr_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-extensions.Tpo" "$(DEPDIR)/libattcert_gcc64dbgpthr_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_gcc64dbgpthr_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbgpthr_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_gcc64dbgpthr_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbgpthr_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbgpthr_la-mystack.Tpo" -c -o libattcert_gcc64dbgpthr_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-mystack.Tpo" "$(DEPDIR)/libattcert_gcc64dbgpthr_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_gcc64dbgpthr_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbgpthr_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_gcc64dbgpthr_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbgpthr_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbgpthr_la-error.Tpo" -c -o libattcert_gcc64dbgpthr_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-error.Tpo" "$(DEPDIR)/libattcert_gcc64dbgpthr_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_gcc64dbgpthr_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbgpthr_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_gcc64dbgpthr_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbgpthr_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbgpthr_la-newformat.Tpo" -c -o libattcert_gcc64dbgpthr_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-newformat.Tpo" "$(DEPDIR)/libattcert_gcc64dbgpthr_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_gcc64dbgpthr_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbgpthr_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_gcc64dbgpthr_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64dbgpthr_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64dbgpthr_la-init.Tpo" -c -o libattcert_gcc64dbgpthr_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-init.Tpo" "$(DEPDIR)/libattcert_gcc64dbgpthr_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64dbgpthr_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_gcc64dbgpthr_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64dbgpthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64dbgpthr_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

libattcert_gcc64pthr_la-validate.lo: validate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64pthr_la-validate.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64pthr_la-validate.Tpo" -c -o libattcert_gcc64pthr_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64pthr_la-validate.Tpo" "$(DEPDIR)/libattcert_gcc64pthr_la-validate.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64pthr_la-validate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='validate.c' object='libattcert_gcc64pthr_la-validate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64pthr_la-validate.lo `test -f 'validate.c' || echo '$(srcdir)/'`validate.c

libattcert_gcc64pthr_la-write.lo: write.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64pthr_la-write.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64pthr_la-write.Tpo" -c -o libattcert_gcc64pthr_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64pthr_la-write.Tpo" "$(DEPDIR)/libattcert_gcc64pthr_la-write.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64pthr_la-write.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='write.c' object='libattcert_gcc64pthr_la-write.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64pthr_la-write.lo `test -f 'write.c' || echo '$(srcdir)/'`write.c

libattcert_gcc64pthr_la-extensions.lo: extensions.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64pthr_la-extensions.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64pthr_la-extensions.Tpo" -c -o libattcert_gcc64pthr_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64pthr_la-extensions.Tpo" "$(DEPDIR)/libattcert_gcc64pthr_la-extensions.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64pthr_la-extensions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='extensions.c' object='libattcert_gcc64pthr_la-extensions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64pthr_la-extensions.lo `test -f 'extensions.c' || echo '$(srcdir)/'`extensions.c

libattcert_gcc64pthr_la-mystack.lo: mystack.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64pthr_la-mystack.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64pthr_la-mystack.Tpo" -c -o libattcert_gcc64pthr_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64pthr_la-mystack.Tpo" "$(DEPDIR)/libattcert_gcc64pthr_la-mystack.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64pthr_la-mystack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mystack.c' object='libattcert_gcc64pthr_la-mystack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64pthr_la-mystack.lo `test -f 'mystack.c' || echo '$(srcdir)/'`mystack.c

libattcert_gcc64pthr_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64pthr_la-error.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64pthr_la-error.Tpo" -c -o libattcert_gcc64pthr_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64pthr_la-error.Tpo" "$(DEPDIR)/libattcert_gcc64pthr_la-error.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64pthr_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libattcert_gcc64pthr_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64pthr_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libattcert_gcc64pthr_la-newformat.lo: newformat.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64pthr_la-newformat.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64pthr_la-newformat.Tpo" -c -o libattcert_gcc64pthr_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64pthr_la-newformat.Tpo" "$(DEPDIR)/libattcert_gcc64pthr_la-newformat.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64pthr_la-newformat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='newformat.c' object='libattcert_gcc64pthr_la-newformat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64pthr_la-newformat.lo `test -f 'newformat.c' || echo '$(srcdir)/'`newformat.c

libattcert_gcc64pthr_la-init.lo: init.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -MT libattcert_gcc64pthr_la-init.lo -MD -MP -MF "$(DEPDIR)/libattcert_gcc64pthr_la-init.Tpo" -c -o libattcert_gcc64pthr_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libattcert_gcc64pthr_la-init.Tpo" "$(DEPDIR)/libattcert_gcc64pthr_la-init.Plo"; else rm -f "$(DEPDIR)/libattcert_gcc64pthr_la-init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='init.c' object='libattcert_gcc64pthr_la-init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libattcert_gcc64pthr_la_CFLAGS) $(CFLAGS) -c -o libattcert_gcc64pthr_la-init.lo `test -f 'init.c' || echo '$(srcdir)/'`init.c

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
