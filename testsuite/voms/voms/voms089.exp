load_lib vomstest.exp
testheader "See if voms allows expansion of credential set."

proc mytest {} {
    _activateCert mycert2

    _vomsStart voms1
    set outname [exec mktemp $::SCRATCHDIR/voms-proxy-init-XXXXXX]
    set res [catch {set out [exec $::INSTALLDIR/bin/voms-proxy-init --voms voms1 >& $outname]}]
    set res [catch {set out [exec $::INSTALLDIR/bin/voms-proxy-init --voms voms1:/voms1/group1/Role=TestRole --valid 10:00 --noregen >& $outname]}]
    _vomsStop voms1

    if $res then {
        addlog $outname
        testmessage "Second voms-proxy-init failed."
        return $::FAILTEST
    }

    set outname [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
    if [catch {set out2 [exec $::INSTALLDIR/bin/voms-proxy-info --all >& $outname]}] then {
        addlog $outname
        testmessage "voms-proxy-info failed."
        return $::FAILTEST
    } else {
        #match against known (correct) output
        set correct "/voms1/group1/Role=TestRole"

        set out2 [exec cat  $outname]

        if [regexp $correct $out2 dummy] then {
            set outname2 [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
            set id [open $outname2 "w+"]
            puts $id $correct
            close $id
            addlog $outname 
            addlog $outname2
            testmessage "Role present in output."
            return $::FAILTEST
        } else {
            set outname2 [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
            set id [open $outname2 "w+"]
            puts $id $correct
            close $id
            addlog $outname 
            addlog $outname2

            testmessage "Role correctly absent"
            return $::PASSTEST
        }
    }
}

do_test