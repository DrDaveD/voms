load_lib vomstest.exp

testheader "See if a proxy type is detected correctly."
_activateCert mycert2

_vomsStart voms1
set outname [exec mktemp $::SCRATCHDIR/voms-proxy-init-XXXXXX]
set res [catch {set out [exec $::INSTALLDIR/bin/voms-proxy-init --voms voms1 >& $outname]}]
_vomsStop voms1

if $res then {
    set LOGOUTS "$LOGOUTS $outname"
    fail "voms-proxy-init failed."
} else {
    set outname [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
    if [catch {set out2 [exec $::INSTALLDIR/bin/voms-proxy-info --type >& $outname]}] then {
        set LOGOUTS "$LOGOUTS $outname"
        fail "voms proxy info failed."
    } else {
        #match against known (correct) output
        set correct "proxy"
        set out2 [exec cat  $outname]
        if ![regexp $correct $out2] then {
            set outname2 [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
            set id [open $outname2 "w+"]
            puts $id $correct
            close $id
            set LOGOUTS "$LOGOUTS $outname $outname2"
            fail "Unexpected output in voms-proxy-info"
        } else {
            _vomsStart voms1
            set outname [exec mktemp $::SCRATCHDIR/voms-proxy-init-XXXXXX]
            set res [catch {set out [exec $::INSTALLDIR/bin/voms-proxy-init --rfc --voms voms1 >& $outname]}]
            _vomsStop voms1

            if $res then {
                set LOGOUTS "$LOGOUTS $outname"
                fail "voms-proxy-init failed."
            } else {
                set outname [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
                if [catch {set out2 [exec $::INSTALLDIR/bin/voms-proxy-info --type >& $outname]}] then {
                    set LOGOUTS "$LOGOUTS $outname"
                    fail "voms proxy info failed."
                } else {
                    #match against known (correct) output
                    set correct "RFC compliant proxy"
                    set out2 [exec cat  $outname]
                    if ![regexp $correct $out2] then {
                        set outname2 [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
                        set id [open $outname2 "w+"]
                        puts $id $correct
                        close $id
                        set LOGOUTS "$LOGOUTS $outname $outname2"
                        fail "Unexpected output in voms-proxy-info"
                    } else {
                        _vomsStart voms1
                        set outname [exec mktemp $::SCRATCHDIR/voms-proxy-init-XXXXXX]
                        set res [catch {set out [exec $::INSTALLDIR/bin/voms-proxy-init --proxyver 3 --voms voms1 >& $outname]}]
                        _vomsStop voms1

                        if $res then {
                            set LOGOUTS "$LOGOUTS $outname"
                            fail "voms-proxy-init failed."
                        } else {
                            set outname [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
                            if [catch {set out2 [exec $::INSTALLDIR/bin/voms-proxy-info --type >& $outname]}] then {
                                set LOGOUTS "$LOGOUTS $outname"
                                fail "voms proxy info failed."
                            } else {
                                #match against known (correct) output
                                set correct "GT3-style proxy"
                                set out2 [exec cat  $outname]
                                if ![regexp $correct $out2] then {
                                    set outname2 [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
                                    set id [open $outname2 "w+"]
                                    puts $id $correct
                                    close $id
                                    set LOGOUTS "$LOGOUTS $outname $outname2"
                                    fail "Unexpected output in voms-proxy-info"
                                } else {
                                    pass "proxy type reported correctly."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
