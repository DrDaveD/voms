load_lib vomstest.exp
testheader "See if a default REST request for specific FQANs works."

proc mytest {} {
    _activateCert mycert2

    _vomsStart voms1
    set outname [exec mktemp $::SCRATCHDIR/openssl-output-XXXXXX]
    set errname [exec mktemp $::SCRATCHDIR/openssl-error-XXXXXX]
    set tempfile [exec mktemp $::SCRATCHDIR/openssl-input-XXXXXX]
    set id [open $tempfile "w+"]
    puts $id "GET /generate-ac?fqans=/voms1/group1 HTTP/1.1"
    puts $id ""
    close $id

    set res [catch {set out [exec openssl s_client -connect localhost:33334 -CApath $::_cadir -cert $::env(HOME)/.globus2/usercert.pem -key $::env(HOME)/.globus2/userkey.pem -quiet 2>$errname <$tempfile >$outname]}]

    _vomsStop voms1

    set out [exec cat $outname]

    if  $res then {
        addlog $outname
	addlog $errname
        testmessage "openssl s_client incorrectly failed."
	
        return $::FAILTEST
    } else {
        set correct1 "HTTP/1.1 200 OK"
	set out2 [exec cat $outname]

	if [regexp $correct1 $out] then {
	    #result is correctly ok

	    set correct1 "<\\?xml version=\"1.0\" encoding=\"UTF-8\"\\?><voms><ac>(.*)</ac></voms>"
	    if [regexp $correct1 $out all ac] then {
		# Output was as intended.  Is it a valid AC?
		set acfile [exec mktemp $::SCRATCHDIR/ac-XXXXXX]
		set acid [open $acfile "w+"]
		puts $acid "-----BEGIN ATTRIBUTE CERTIFICATE-----"
		puts $acid [string trim $ac]
		puts $acid "-----END ATTRIBUTE CERTIFICATE-----"
		close $acid
		addlog $acfile

		set vomsout [exec mktemp $::SCRATCHDIR/openssl-output-XXXXXX]

		set res [catch {set out [exec $::INSTALLDIR/bin/voms-proxy-init --includeac $acfile >& $vomsout]}]
		addlog $vomsout

		if $res then {
		    testmessage "voms-proxy-init failed."
		    return $::FAILTEST
		}

		set infoout [exec mktemp $::SCRATCHDIR/voms-proxy-info-XXXXXX]
		if [catch {set out2 [exec $::INSTALLDIR/bin/voms-proxy-info --all >& $infoout]}] then {
		    addlog $infoout
		    testmessage "voms-proxy-info failed."
		    return $::FAILTEST
		} else {
		    #match against known (correct) output
		    set correct3 "attribute : /voms1/group1
attribute : /voms1"
		    set out3 [exec cat  $infoout]

		    if [regexp $correct3 $out3] then {
			testmessage "AC was valid"
			
			return $::PASSTEST
		    } 
		    addlog $out3
		    testmessage "AC did not contain correct information."
		    return $::FAILTEST
		}
	    } else {
		testmessage "Output was not as intended."
		addlog $outname
		return $::FAILTEST
	    }
	}
	
	addlog $outname
        testmessage "REST output was incorrect."
        return $::FAILTEST
    }
}

do_test
