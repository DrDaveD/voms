load_lib vomstest.exp

proc mytest {} {
    testheader "See if voms-proxy-init --vomslife fails correctly when it should."

    _activateCert mycert2
    _cleanproxy

    set res [log_exec outname {voms-proxy-init --vomslife 5000}]

    if !$res then {
        addlog $outname
        testmessage "voms-proxy-init incorrectly succeeded."
        return $::FAILTEST
    }

    set correct "-vomslife argument must be in the format: h:m"

    loadvar out2 $outname
    if ![regexp -- $correct $out2] then {
        addlog $outname
        logvar correct
        testmessage "voms-proxy-init returned wrong message."
        return $::FAILTEST
    }


    set res [log_exec outname {voms-proxy-init --vomslife -5000:0}]

    if !$res then {
        addlog $outname
        testmessage "voms-proxy-init incorrectly succeeded."
        return $::FAILTEST
    }

    set correct "specified hours must be positive"

    loadvar out2 $outname
    if ![regexp $correct $out2] then {
        addlog $outname
        logvar correct
        testmessage "voms-proxy-init returned wrong message."
        return $::FAILTEST
    }


    set res [log_exec outname {voms-proxy-init --vomslife 5000:1000}]

    if !$res then {
        addlog $outname
        testmessage "voms-proxy-init incorrectly succeeded."
        return $::FAILTEST
    }

    set correct "specified minutes must be in the range 0-59"

    loadvar out2 $outname
    if ![regexp $correct $out2] then {
        addlog $outname
        logvar correct
        testmessage "voms-proxy-init returned wrong message."
        return $::FAILTEST
    }

    testmessage "voms-proxy-init failed correctly in all cases."
    return $::PASSTEST
}

do_test
