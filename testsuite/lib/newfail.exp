rename fail _fail
rename pass _pass
rename xfail _xfail
rename load_lib _load_lib
rename clone_output _clone_output
rename cleanup _cleanup

proc load_lib {file} {
    global loaded_libs

    if [info exists loaded_libs($file)] {
        return
    }

    set loaded_libs($file) ""

    if { [search_and_load_file "library file" $file [list $::objdir/lib]] == 0 } {
        _load_lib $file
    }
}

proc fail message {
    global LOGOUTS
    global REPORTDIR
    global _logdescriptor

    puts $_logdescriptor "<td align=\"left\" bgcolor=\"red\">failed</td><td></td>"
    puts $_logdescriptor "<td>"

    set scriptname [file normalize [uplevel info script]]
    set fname [file dirname [file dirname $scriptname]]
    set realname [string range $scriptname [string length $$fname] end]
    set newname [exec mktemp $REPORTDIR/out-XXXXXX]
    file copy -force $scriptname $newname
    puts $_logdescriptor "<a href=\"$newname\">$realname</a>"

    foreach name [split $LOGOUTS] {
        if [file exists $name] then {
            set newname [exec mktemp $REPORTDIR/out-XXXXXX]
            file copy -force $name $newname
            puts $_logdescriptor "<a href=\"$newname\">$name</a>"
        }
    }
    puts $_logdescriptor "</td><tr>"
    flush $_logdescriptor
    _fail $message
}

proc pass message {
    global _logdescriptor
    puts $_logdescriptor "<td align=\"left\" bgcolor=\"green\">passed</td><td></td>"
    puts $_logdescriptor "<td></td><tr>"
    flush $_logdescriptor
    _pass $message
}

proc xfail message {
    global _logdescriptor
    puts $_logdescriptor "<td align=\"left\" bgcolor=\"green\">expected failure</td><td></td>"
    puts $_logdescriptor "<td></td><tr>"
    _xfail $message
}

proc clone_output {message} {
    set value [string compare -length 25 "ERROR: tcl error sourcing" $message]
    if [expr ! $value] then {
        fail "$message"
        puts "CALLED"
    }

    set msg [_clone_output "$message"]
    return "$msg"
}

proc cleanup {} {
    _cleanup
    puts $::_logdescriptor "</table>"

    puts $::_logdescriptor "</body></html>"
    flush $::_logdescriptor
    close $::_logdescriptor
#    catch {exec rm -rf $::INSTALLDIR/ca}
}

proc testheader {description {testname ""}} {
    set scriptname [file normalize [uplevel info script]]
    set fname [file dirname [file dirname $scriptname]]

    set realname [string range $scriptname [string length $$fname] end]
    puts $::_logdescriptor "<tr><td align=\"left\">$realname</td><td align=\"left\">$description</td>"
    set ::LOGOUTS ""
}

